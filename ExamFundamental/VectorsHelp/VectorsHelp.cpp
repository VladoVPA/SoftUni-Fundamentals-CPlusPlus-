#include <iostream>
#include <string>
#include <sstream>
#include <vector>
#include <algorithm>

using namespace std;

void putDataToVector(istream& stream, vector<int>& vv) {
	string line;
	getline(stream, line);

	istringstream input(line);

	int i;
	while (input >> i) {
		vv.push_back(i);
		i++;
	}
}


void printVector(const vector<int>& vv) {
	for (int n : vv)
		cout << n << ' ';
}


int main()
{
	vector<int> numbers;
	putDataToVector(cin, numbers);		// ????????? ?????????, ????? ?? ????? ??????? ?? ????????? ? ?? ?? ????? ??? ???????
	// ????? ??? ????????? ? ??????????? ?? ???????? string ?? getline
	// ????? ??? ????????? ? ??????????? ?? ???????? istringstream ?? ????????? ?? ??????? ???? ?? ???? ???  ??????? ! 

	sort(numbers.begin(), numbers.end()); // sort() function from #include <algorithm> ??????????? ??????????? ???????, ???? ?? ???????????? ? 1 -> 2 ? A -> Z
	
	bool myfunction(int i, int j) { return (i >= j); }
	
	sort(numbers.begin(), numbers.end(), myfunction);

	int number;
	numbers.push_back(number);  // ???????? ???-????? ?? ???????? ?? ???????


	vector<int>::iterator it = numbers.begin();
	for (; it != numbers.end(); ) { 			// ????????? ??????? ?? ?? ??????? ???????? ?????.
		if (*it == number) {
			it = numbers.erase(it);		// ????????? ?? ??????? ????????? ??? ????? ???? ?????????. ???????? ?? ??????? !
			break;
		}
		else
			it++;
	}

	numbers.erase(numbers.begin() + index);		//????????? ?????????, ??? ? ?????. 
	//??? ??????? ????? ?? ???????? ?? ???????? ???? ??????? ??????? ????? ?????? ?? ???????

	numbers.insert(numbers.begin() + index, number); // ???????? ?? ?????? ??????? ????? ????? ?????

	vector<int>::iterator start = numbers.begin();	// ????????? ????????? ????? ???? ??? ????? ???????

	vector<int>::iterator end = numbers.end() - 1;	// ????????? ???????? ????? ???? ??? ????????? ???????. 
	// ?????? ?? ??????? ? end() ?????? ?? ????? ??????

	vector<int>::iterator pt = numbers.end() - 1;
	while (pt >= numbers.begin()) {					// ?????????? ????? ? ??????? ???
		cout << *pt << ' ';
		if (pt != numbers.begin())
			pt--;
		else
			break;
	}
}